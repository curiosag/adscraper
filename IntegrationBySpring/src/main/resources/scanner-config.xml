<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-event="http://www.springframework.org/schema/integration/event"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:int-mongodb="http://www.springframework.org/schema/integration/mongodb"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.3.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.3.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/task/spring-task.xsd
		http://www.springframework.org/schema/integration/mongodb http://www.springframework.org/schema/integration/mongodb/spring-integration-mongodb.xsd
		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="org.cg.ads" />

	<task:executor id="executor" pool-size="5" />

	<bean id="serverStartupListener" class="org.cg.ads.integration.ServerStartupListener" />
	<bean id="siteScraperFactory" class="org.cg.scraping.SiteScraperFactory" />

	<int:gateway default-request-channel="systemEntry"
		service-interface="org.cg.ads.SystemEntryGateway" />

	<int:filter input-channel="systemEntry" ref="serverStartupListener"
		output-channel="systemEntryAfterStartup" discard-channel="logPrematureMessages" />

	<int:chain input-channel="logPrematureMessages">
		<int:transformer
			expression="'didnt wait for server to start, discarded: ' + payload.toString()" />
		<int-stream:stdout-channel-adapter
			id="consoleOut" append-newline="true" />
	</int:chain>


	<int:chain input-channel="systemEntryAfterStartup"
		output-channel="masterListChannel">

		<int:splitter expression="payload" />
		
		<int:header-enricher>
			<int:header name="id" expression="payload.id" />
			<int:header name="url" expression="payload.url" />
		</int:header-enricher>

		<!-- actually there's no need to enrich/transform with id and url in header, 
			but it makes reuse of http gateway possible -->

		<int:transformer expression="new org.cg.ads.integration.AdDataCollector(payload)" />

		<int:enricher id="getPageForUrl" request-channel="getPageForUrlChannel"
			request-payload-expression="headers['url']">
			<int:property name="html" expression="payload" />
		</int:enricher>
		
		
	</int:chain>

	<int-http:outbound-gateway id="html"
		request-channel="getPageForUrlChannel" url="{url}" http-method="GET"
		expected-response-type="java.lang.String" charset="UTF-8"
		reply-timeout="20000">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>


	<int:channel id="masterListChannel">
		<int:queue capacity="200" />
		<int:interceptors>
			<int:wire-tap channel="loghtmlResponseChannel" />
		</int:interceptors>
	</int:channel>
	<int:logging-channel-adapter id="loghtmlResponseChannel"
		expression="'hopefully async job: '.concat(payload.html.toString().substring(1, 15)).concat(' in thread: ').concat(T(Thread).currentThread().id)"
		level="INFO" />



	<!-- sync using bridge strangely didn't reliably work (only sometimes??), 
		service-activator did -->
	<!--int:bridge input-channel="htmlResponseChannel" output-channel="resyncedHtmlResponseChannel"> 
		<int:poller fixed-rate="500" receive-timeout="500" max-messages-per-poll="1"> 
		</int:poller> </int:bridge -->

	<int:service-activator input-channel="masterListChannel"
		output-channel="resyncedHtmlResponseChannel" expression="payload">
		<int:poller receive-timeout="500" fixed-rate="10" />
	</int:service-activator>

	<int:channel id="resyncedHtmlResponseChannel">
		<int:interceptors>
			<int:wire-tap channel="logResyncedHtmlResponseChannel" />
		</int:interceptors>
	</int:channel>
	<int:logging-channel-adapter id="logResyncedHtmlResponseChannel"
		expression="'maybe resynced job: '.concat(payload.toString().substring(0, 15)).concat(' in thread: ').concat(T(Thread).currentThread().id)"
		level="INFO" />

	<int:chain input-channel="resyncedHtmlResponseChannel">
		<int:transformer
			expression="'result: ' + payload.toString().substring(0, 15).concat(' in thread: ').concat(T(Thread).currentThread().id)" />
		<int-stream:stdout-channel-adapter
			id="consoleOut" append-newline="true" />
	</int:chain>

</beans>