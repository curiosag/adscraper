<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-event="http://www.springframework.org/schema/integration/event"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:int-mongodb="http://www.springframework.org/schema/integration/mongodb"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.3.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.3.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/task/spring-task.xsd
		http://www.springframework.org/schema/integration/mongodb http://www.springframework.org/schema/integration/mongodb/spring-integration-mongodb.xsd
		http://www.springframework.org/schema/util		http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="org.cg.ads" />

	<!-- from https://github.com/spring-projects/spring-integration-samples/blob/master/basic/xml/src/main/resources/META-INF/spring/integration/orderProcessingSample.xml -->
	<!-- <util:map id="orderNamespaceMap"> <entry key="orderNs" value="http://www.example.org/orders" 
		/> <entry key="productNs" value="http://www.example.org/prodcuts" /> </util:map> 
		<si-xml:xpath-splitter id="orderItemSplitter" input-channel="ordersChannel" 
		output-channel="stockCheckerChannel" create-documents="true"> <si-xml:xpath-expression 
		expression="/orderNs:order/orderNs:orderItem" namespace-map="orderNamespaceMap" 
		/> </si-xml:xpath-splitter> -->

	<!-- prevent executions before server is up and running, together with -> int:filter input-channel="systemEntry" -->
	<bean id="serverStartupListener" class="org.cg.ads.integration.ServerStartupListener" />

	<!-- inbound-channel-adapter taking output from object/method "starter.trigger()" 
		<int:inbound-channel-adapter ref="starter" method="trigger" channel="systemEntry" 
		expression=""> <int:poller fixed-rate="50000" /> </int:inbound-channel-adapter> -->

	<!-- or by scripting only -->
	<!-- <int:inbound-channel-adapter channel="systemEntry" expression="1"> 
		<int:poller fixed-rate="7000" /> </int:inbound-channel-adapter> -->

	<int:gateway default-request-channel="systemEntry"
		service-interface="org.cg.ads.SystemEntryGateway" />



	<int:filter input-channel="systemEntry" ref="serverStartupListener"
		output-channel="systemEntryAfterStartup" discard-channel="logPrematureMessages" />

	<int:chain input-channel="logPrematureMessages">
		<int:transformer
			expression="'didnt wait for server to start, discarded: ' + payload" />
		<int-stream:stdout-channel-adapter
			id="consoleOut" append-newline="true" />
	</int:chain>

	<task:executor id="executor" pool-size="5" />
	<int:splitter id="splitter" expression="{0, 1, 2, 3, 4, 5}"
		input-channel="systemEntryAfterStartup" output-channel="jobsChannel" />

	<int:channel id="jobsChannel">
		<int:dispatcher task-executor="executor" />
		<int:interceptors>
			<int:wire-tap channel="requestLoggingChannel" /> <!-- wiretap is still synchronous -->
		</int:interceptors>
	</int:channel>
	<int:logging-channel-adapter id="requestLoggingChannel"
		expression="'job: '.concat(payload).concat(' in thread: ').concat(T(Thread).currentThread().id)"
		level="INFO" />

	<!-- http request is async -->
	<int-http:outbound-gateway id="html"
		request-channel="jobsChannel" url="http://sniffbazar.appspot.com/statData"
		http-method="GET" expected-response-type="java.lang.String" charset="UTF-8"
		reply-timeout="20000" reply-channel="htmlResponseChannel">
		<int-http:uri-variable name="value" expression="payload" />
	</int-http:outbound-gateway>

	<int:channel id="htmlResponseChannel">
		<int:queue capacity="200" />
		<int:interceptors>
			<int:wire-tap channel="loghtmlResponseChannel" />
		</int:interceptors>
	</int:channel>
	<int:logging-channel-adapter id="loghtmlResponseChannel"
		expression="'hopefully async job: '.concat(payload.substring(1, 15)).concat(' in thread: ').concat(T(Thread).currentThread().id)"
		level="INFO" />


	<int:bridge input-channel="htmlResponseChannel"
		output-channel="resyncedHtmlResponseChannel">
		<int:poller fixed-rate="500" receive-timeout="500"
			max-messages-per-poll="1">
		</int:poller>
	</int:bridge>

	<int:channel id="resyncedHtmlResponseChannel">
		<int:interceptors>
			<int:wire-tap channel="logResyncedHtmlResponseChannel" />
		</int:interceptors>
	</int:channel>
	<int:logging-channel-adapter id="logResyncedHtmlResponseChannel"
		expression="'resynced job: '.concat(payload.toString().substring(0, 15)).concat(' in thread: ').concat(T(Thread).currentThread().id)"
		level="INFO" />

	<int:chain input-channel="resyncedHtmlResponseChannel">
		<int:transformer expression="'result: ' + payload.toString().substring(0, 15)" />
		<int-stream:stdout-channel-adapter
			id="consoleOut" append-newline="true" />
	</int:chain>

</beans>